#!/bin/sh /etc/rc.common

START=95
USE_PROCD=1

start_service() {
  . /lib/functions.sh
  board=$(board_name)
  model="${board#*-}"
  if [ ! -f "/etc/config/zigbee" ]; then
  touch "/etc/config/zigbee"
  fi

  if [ $model == s1300 ]; then
    uci set zigbee.s1300='zigbeeserial'
    uci set zigbee.spi_device='/dev/spidev1.0'
	[ -n "$(ls -l /sys/class/gpio/gpiochip412 2>/dev/null)" ] && S1300_CS_GPIO='457' || S1300_CS_GPIO='45'
	[ -n "$(ls -l /sys/class/gpio/gpiochip412 2>/dev/null)" ] && S1300_INT_GPIO='454' || S1300_INT_GPIO='42'
	[ -n "$(ls -l /sys/class/gpio/gpiochip412 2>/dev/null)" ] && S1300_RES_GPIO='461' || S1300_RES_GPIO='49'
	[ -n "$(ls -l /sys/class/gpio/gpiochip412 2>/dev/null)" ] && S1300_WAKE_GPIO='452' || S1300_WAKE_GPIO='40'
    uci set zigbee.spi_cs_io=${S1300_CS_GPIO}
	uci set zigbee.spi_int_io=${S1300_INT_GPIO}
    uci set zigbee.spi_reset_io=${S1300_RES_GPIO}
	uci set zigbee.spi_wake_io=${S1300_WAKE_GPIO}
	uci set zigbee.hal='spi'
  elif [ $model == b2200 ]; then
    uci set zigbee.b2200='zigbeeserial'
    uci set zigbee.spi_device='/dev/spidev1.0'
    uci set zigbee.spi_cs_io='45'
	uci set zigbee.spi_int_io='2'
    uci set zigbee.spi_reset_io='43'
	uci set zigbee.spi_wake_io='48'
	uci set zigbee.hal='spi'
  elif [ $model == x750 ]; then
	echo 1 > /sys/class/gpio/export
	echo 1 > /sys/class/gpio/gpio1/value
    uci set zigbee.x750='zigbeeserial'
    uci set zigbee.port='/dev/ttyS0'
    uci set zigbee.baudrate='115200'
    uci set zigbee.flow_control='n'
	uci set zigbee.reset_mothod='soft'
	uci set zigbee.hal='uart'
  elif [ $model == mt300n-v2 ]; then
	echo 5 > /sys/class/gpio/export
	echo out > /sys/class/gpio/gpio5/direction
	echo 1 > /sys/class/gpio/gpio5/value
    uci set zigbee.x750='zigbeeserial'
    uci set zigbee.port='/dev/ttyS1'
    uci set zigbee.baudrate='115200'
    uci set zigbee.flow_control='n'
	uci set zigbee.reset_mothod='soft'
	uci set zigbee.hal='uart'
  fi
  uci commit zigbee

  procd_open_instance
  procd_set_param command "zbdaemon"
  procd_set_param respawn
  procd_close_instance
}